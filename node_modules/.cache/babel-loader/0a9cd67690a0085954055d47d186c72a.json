{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useCallback, useState } from \"react\";\nimport MetisMenu from \"metismenujs\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SidebarContent = props => {\n  const ref = useRef();\n  const [openDropDownArray, setOpenDropDownArray] = useState([]);\n  const activateParentDropdown = useCallback(item => {\n    item.classList.add(\"active\");\n    const parent = item.parentElement;\n    const parent2El = parent.childNodes[1];\n\n    if (parent2El && parent2El.id !== \"side-menu\") {\n      parent2El.classList.add(\"mm-show\");\n    }\n\n    if (parent) {\n      parent.classList.add(\"mm-active\");\n      const parent2 = parent.parentElement;\n\n      if (parent2) {\n        parent2.classList.add(\"mm-show\"); // ul tag\n\n        const parent3 = parent2.parentElement; // li tag\n\n        if (parent3) {\n          parent3.classList.add(\"mm-active\"); // li\n\n          parent3.childNodes[0].classList.add(\"mm-active\"); //a\n\n          const parent4 = parent3.parentElement; // ul\n\n          if (parent4) {\n            parent4.classList.add(\"mm-show\"); // ul\n\n            const parent5 = parent4.parentElement;\n\n            if (parent5) {\n              parent5.classList.add(\"mm-show\"); // li\n\n              parent5.childNodes[0].classList.add(\"mm-active\"); // a tag\n            }\n          }\n        }\n      }\n\n      scrollElement(item);\n      return false;\n    }\n\n    scrollElement(item);\n    return false;\n  }, []); // Use ComponentDidMount and ComponentDidUpdate method symultaniously\n\n  useEffect(() => {\n    const pathName = props.location.pathname;\n\n    const initMenu = () => {\n      new MetisMenu(\"#side-menu\");\n      let matchingMenuItem = null;\n      const ul = document.getElementById(\"side-menu\");\n      const items = ul.getElementsByTagName(\"a\");\n\n      for (let i = 0; i < items.length; ++i) {\n        if (pathName === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        activateParentDropdown(matchingMenuItem);\n      }\n    };\n\n    initMenu();\n  }, [props.location.pathname, activateParentDropdown]);\n  useEffect(() => {\n    ref.current.recalculate();\n  });\n\n  function scrollElement(item) {\n    if (item) {\n      const currentPosition = item.offsetTop;\n\n      if (currentPosition > window.innerHeight) {\n        ref.current.getScrollElement().scrollTop = currentPosition - 300;\n      }\n    }\n  }\n\n  const handleToggle = itemName => {\n    const dropDownArray = Array.from(openDropDownArray);\n\n    if (dropDownArray.includes(itemName)) {\n      const index = dropDownArray.indexOf(itemName);\n      dropDownArray.splice(index, 1);\n    } else {\n      dropDownArray.push(itemName);\n    }\n\n    setOpenDropDownArray(dropDownArray);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null) // <Drawer\n  //   // className={classes.drawer}\n  //   anchor=\"left\"\n  //   open={true}\n  //   // classes={{ paper: classes.drawerPaper }}\n  //   // onClose={() => dispatch(setIsMenuDrawerOpen(false))}\n  // >\n  //   <List disablePadding>aaaa a a a</List>\n  // </Drawer>\n  ;\n};\n\nSidebarContent.propTypes = {\n  location: PropTypes.object,\n  t: PropTypes.any\n};\nexport default withRouter(SidebarContent);","map":{"version":3,"sources":["/home/art/Desktop/VScripts/Projetos-3/src/components/Sidebar/Sidebar.tsx"],"names":["PropTypes","React","useEffect","useRef","useCallback","useState","MetisMenu","withRouter","SidebarContent","props","ref","openDropDownArray","setOpenDropDownArray","activateParentDropdown","item","classList","add","parent","parentElement","parent2El","childNodes","id","parent2","parent3","parent4","parent5","scrollElement","pathName","location","pathname","initMenu","matchingMenuItem","ul","document","getElementById","items","getElementsByTagName","i","length","current","recalculate","currentPosition","offsetTop","window","innerHeight","getScrollElement","scrollTop","handleToggle","itemName","dropDownArray","Array","from","includes","index","indexOf","splice","push","propTypes","object","t","any"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,WAAnC,EAAgDC,QAAhD,QAAgE,OAAhE;AAMA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAcA,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AACrC,QAAMC,GAAG,GAAGP,MAAM,EAAlB;AAEA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAW,EAAX,CAA1D;AAEA,QAAMQ,sBAAsB,GAAGT,WAAW,CAAEU,IAAD,IAAU;AACnDA,IAAAA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACA,UAAMC,MAAM,GAAGH,IAAI,CAACI,aAApB;AACA,UAAMC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAlB;;AACA,QAAID,SAAS,IAAIA,SAAS,CAACE,EAAV,KAAiB,WAAlC,EAA+C;AAC7CF,MAAAA,SAAS,CAACJ,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACD;;AAED,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACF,SAAP,CAAiBC,GAAjB,CAAqB,WAArB;AACA,YAAMM,OAAO,GAAGL,MAAM,CAACC,aAAvB;;AAEA,UAAII,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACP,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB,EADW,CACuB;;AAElC,cAAMO,OAAO,GAAGD,OAAO,CAACJ,aAAxB,CAHW,CAG4B;;AAEvC,YAAIK,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACR,SAAR,CAAkBC,GAAlB,CAAsB,WAAtB,EADW,CACyB;;AACpCO,UAAAA,OAAO,CAACH,UAAR,CAAmB,CAAnB,EAAsBL,SAAtB,CAAgCC,GAAhC,CAAoC,WAApC,EAFW,CAEuC;;AAClD,gBAAMQ,OAAO,GAAGD,OAAO,CAACL,aAAxB,CAHW,CAG4B;;AACvC,cAAIM,OAAJ,EAAa;AACXA,YAAAA,OAAO,CAACT,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB,EADW,CACuB;;AAClC,kBAAMS,OAAO,GAAGD,OAAO,CAACN,aAAxB;;AACA,gBAAIO,OAAJ,EAAa;AACXA,cAAAA,OAAO,CAACV,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB,EADW,CACuB;;AAClCS,cAAAA,OAAO,CAACL,UAAR,CAAmB,CAAnB,EAAsBL,SAAtB,CAAgCC,GAAhC,CAAoC,WAApC,EAFW,CAEuC;AACnD;AACF;AACF;AACF;;AACDU,MAAAA,aAAa,CAACZ,IAAD,CAAb;AACA,aAAO,KAAP;AACD;;AACDY,IAAAA,aAAa,CAACZ,IAAD,CAAb;AACA,WAAO,KAAP;AACD,GApCyC,EAoCvC,EApCuC,CAA1C,CALqC,CA2CrC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,QAAQ,GAAGlB,KAAK,CAACmB,QAAN,CAAeC,QAAhC;;AAEA,UAAMC,QAAQ,GAAG,MAAM;AACrB,UAAIxB,SAAJ,CAAc,YAAd;AACA,UAAIyB,gBAAgB,GAAG,IAAvB;AACA,YAAMC,EAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AACA,YAAMC,KAAK,GAAGH,EAAE,CAACI,oBAAH,CAAwB,GAAxB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACrC,YAAIV,QAAQ,KAAKQ,KAAK,CAACE,CAAD,CAAL,CAASR,QAA1B,EAAoC;AAClCE,UAAAA,gBAAgB,GAAGI,KAAK,CAACE,CAAD,CAAxB;AACA;AACD;AACF;;AACD,UAAIN,gBAAJ,EAAsB;AACpBlB,QAAAA,sBAAsB,CAACkB,gBAAD,CAAtB;AACD;AACF,KAdD;;AAeAD,IAAAA,QAAQ;AACT,GAnBQ,EAmBN,CAACrB,KAAK,CAACmB,QAAN,CAAeC,QAAhB,EAA0BhB,sBAA1B,CAnBM,CAAT;AAqBAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,GAAG,CAAC6B,OAAJ,CAAYC,WAAZ;AACD,GAFQ,CAAT;;AAIA,WAASd,aAAT,CAAuBZ,IAAvB,EAAkC;AAChC,QAAIA,IAAJ,EAAU;AACR,YAAM2B,eAAe,GAAG3B,IAAI,CAAC4B,SAA7B;;AACA,UAAID,eAAe,GAAGE,MAAM,CAACC,WAA7B,EAA0C;AACxClC,QAAAA,GAAG,CAAC6B,OAAJ,CAAYM,gBAAZ,GAA+BC,SAA/B,GAA2CL,eAAe,GAAG,GAA7D;AACD;AACF;AACF;;AAED,QAAMM,YAAY,GAAIC,QAAD,IAAsB;AACzC,UAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWxC,iBAAX,CAAtB;;AACA,QAAIsC,aAAa,CAACG,QAAd,CAAuBJ,QAAvB,CAAJ,EAAsC;AACpC,YAAMK,KAAK,GAAGJ,aAAa,CAACK,OAAd,CAAsBN,QAAtB,CAAd;AACAC,MAAAA,aAAa,CAACM,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD,KAHD,MAGO;AACLJ,MAAAA,aAAa,CAACO,IAAd,CAAmBR,QAAnB;AACD;;AACDpC,IAAAA,oBAAoB,CAACqC,aAAD,CAApB;AACD,GATD;;AAWA,sBACE,yCADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAXF;AAaD,CAtGD;;AAwGAzC,cAAc,CAACiD,SAAf,GAA2B;AACzB7B,EAAAA,QAAQ,EAAE5B,SAAS,CAAC0D,MADK;AAEzBC,EAAAA,CAAC,EAAE3D,SAAS,CAAC4D;AAFY,CAA3B;AAKA,eAAerD,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useCallback, useState } from \"react\";\n\nimport Icon from \"@ailibs/feather-react-ts\";\n\nimport SimpleBar from \"simplebar-react\";\n\nimport MetisMenu from \"metismenujs\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Drawer,\n  IconButton,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  Collapse,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SidebarContent = (props: any) => {\n  const ref = useRef<any>();\n\n  const [openDropDownArray, setOpenDropDownArray] = useState<string[]>([]);\n\n  const activateParentDropdown = useCallback((item) => {\n    item.classList.add(\"active\");\n    const parent = item.parentElement;\n    const parent2El = parent.childNodes[1];\n    if (parent2El && parent2El.id !== \"side-menu\") {\n      parent2El.classList.add(\"mm-show\");\n    }\n\n    if (parent) {\n      parent.classList.add(\"mm-active\");\n      const parent2 = parent.parentElement;\n\n      if (parent2) {\n        parent2.classList.add(\"mm-show\"); // ul tag\n\n        const parent3 = parent2.parentElement; // li tag\n\n        if (parent3) {\n          parent3.classList.add(\"mm-active\"); // li\n          parent3.childNodes[0].classList.add(\"mm-active\"); //a\n          const parent4 = parent3.parentElement; // ul\n          if (parent4) {\n            parent4.classList.add(\"mm-show\"); // ul\n            const parent5 = parent4.parentElement;\n            if (parent5) {\n              parent5.classList.add(\"mm-show\"); // li\n              parent5.childNodes[0].classList.add(\"mm-active\"); // a tag\n            }\n          }\n        }\n      }\n      scrollElement(item);\n      return false;\n    }\n    scrollElement(item);\n    return false;\n  }, []);\n\n  // Use ComponentDidMount and ComponentDidUpdate method symultaniously\n  useEffect(() => {\n    const pathName = props.location.pathname;\n\n    const initMenu = () => {\n      new MetisMenu(\"#side-menu\");\n      let matchingMenuItem = null;\n      const ul: any = document.getElementById(\"side-menu\");\n      const items = ul.getElementsByTagName(\"a\");\n      for (let i = 0; i < items.length; ++i) {\n        if (pathName === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n      if (matchingMenuItem) {\n        activateParentDropdown(matchingMenuItem);\n      }\n    };\n    initMenu();\n  }, [props.location.pathname, activateParentDropdown]);\n\n  useEffect(() => {\n    ref.current.recalculate();\n  });\n\n  function scrollElement(item: any) {\n    if (item) {\n      const currentPosition = item.offsetTop;\n      if (currentPosition > window.innerHeight) {\n        ref.current.getScrollElement().scrollTop = currentPosition - 300;\n      }\n    }\n  }\n\n  const handleToggle = (itemName: string) => {\n    const dropDownArray = Array.from(openDropDownArray);\n    if (dropDownArray.includes(itemName)) {\n      const index = dropDownArray.indexOf(itemName);\n      dropDownArray.splice(index, 1);\n    } else {\n      dropDownArray.push(itemName);\n    }\n    setOpenDropDownArray(dropDownArray);\n  };\n\n  return (\n    <></>\n    // <Drawer\n    //   // className={classes.drawer}\n    //   anchor=\"left\"\n    //   open={true}\n    //   // classes={{ paper: classes.drawerPaper }}\n    //   // onClose={() => dispatch(setIsMenuDrawerOpen(false))}\n    // >\n    \n    //   <List disablePadding>aaaa a a a</List>\n    // </Drawer>\n  );\n};\n\nSidebarContent.propTypes = {\n  location: PropTypes.object,\n  t: PropTypes.any,\n};\n\nexport default withRouter(SidebarContent);\n"]},"metadata":{},"sourceType":"module"}