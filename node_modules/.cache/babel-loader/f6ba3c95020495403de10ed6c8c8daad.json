{"ast":null,"code":"/* eslint-disable react-hooks/rules-of-hooks */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable no-unused-expressions */\nimport React, { useCallback, useEffect, useState, useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport api from '../../services/api';\nimport { AuthContext } from '../../components/test';\n\nconst Lesson = () => {\n  const [character, setCharacter] = useState(null);\n  const [homeworld, setHomeworld] = useState(null);\n  const [species, setSpecies] = useState(null);\n  const [films, setFilms] = useState([]);\n  const {\n    testandoApenas,\n    data,\n    setData\n  } = useContext(AuthContext);\n  const {\n    params\n  } = useRouteMatch(); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  function getRidOfHttp(string) {\n    const url = string.replace(/^https?:\\/\\//, '');\n    const baseUrl = 'swapi.dev/api/';\n    const finalUrl = url.replace(baseUrl, '');\n    return finalUrl;\n  }\n\n  let newCharacters = {};\n  const filmsNames = [];\n  const fetchData = useCallback(async () => {\n    const dados = await testandoApenas(params.character);\n    console.log('dados', dados); // setData(dados)\n  }, [params.character]);\n  useEffect(() => {\n    // fetchData()\n    // console.log('wth', teste)\n    // setCharacter(teste)\n    api.get(`/people/?search=${params.character}`).then(response => {\n      if (response.data) {\n        const fetchHistory = response.data.results[0].films.map( // eslint-disable-next-line no-async-promise-executor\n        item => new Promise(async (resolve, reject) => {\n          const resposta = await api.get(`${item}`);\n          filmsNames.push({\n            name: resposta.data.title,\n            url: resposta.data.url\n          });\n          resolve();\n        }));\n        newCharacters = { ...response.data,\n          filmeszeira: filmsNames\n        };\n        console.log('duha81h4e ', newCharacters);\n        Promise.all(fetchHistory);\n      }\n\n      setTimeout(() => {\n        setCharacter(newCharacters);\n      }, 2000);\n    });\n  }, [params.character]);\n  useEffect(() => {\n    if (character === null || character === void 0 ? void 0 : character.results[0].homeworld) {\n      var _character$results$;\n\n      api.get(`${character === null || character === void 0 ? void 0 : (_character$results$ = character.results[0]) === null || _character$results$ === void 0 ? void 0 : _character$results$.homeworld}`).then(response => {\n        setHomeworld(response.data);\n        console.log('acho que nem ta send');\n      });\n    }\n\n    if (character === null || character === void 0 ? void 0 : character.results[0].species) {\n      api.get(`${character === null || character === void 0 ? void 0 : character.results[0].species}`).then(response => {\n        setSpecies(response.data);\n        console.log('teste');\n      });\n    } // console.log(\"aaaaaaaaaaaa\", character?.results[0].films)\n    // api.get(`${character?.results[0].films}`).then((response: any) => {\n    //   setFilms(response.data);\n    //   console.log(\"dados\")\n    // });\n\n  }, [character]);\n\n  if ((character === null || character === void 0 ? void 0 : character.results[0].favorited) === true) {\n    useEffect(() => {\n      localStorage.setItem('@githubExplorer:repositories', JSON.stringify(character));\n    }, [character]); // saves repositores on localstorage when repositories is altered\n  }\n\n  useEffect(() => {\n    // console.log(\"teasd234\", teste)\n    console.log('daibdiad', character);\n    console.log('logando', data);\n  }, [character, data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default Lesson;","map":{"version":3,"sources":["/home/art/Desktop/VScripts/Projetos-3/src/pages/Lesson/index.tsx"],"names":["React","useCallback","useEffect","useState","useContext","useRouteMatch","api","AuthContext","Lesson","character","setCharacter","homeworld","setHomeworld","species","setSpecies","films","setFilms","testandoApenas","data","setData","params","getRidOfHttp","string","url","replace","baseUrl","finalUrl","newCharacters","filmsNames","fetchData","dados","console","log","get","then","response","fetchHistory","results","map","item","Promise","resolve","reject","resposta","push","name","title","filmeszeira","all","setTimeout","favorited","localStorage","setItem","JSON","stringify"],"mappings":"AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IACEC,WADF,EACeC,SADf,EAC0BC,QAD1B,EACoCC,UADpC,QAEO,OAFP;AAGA,SAASC,aAAT,QAAoC,kBAApC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAGA,SAASC,WAAT,QAA0C,uBAA1C;;AAqDA,MAAMC,MAA+B,GAAG,MAAM;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAuB,IAAvB,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAuB,IAAvB,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAqB,IAArB,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAc,EAAd,CAAlC;AAEA,QAAM;AAAEc,IAAAA,cAAF;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAoCf,UAAU,CAACG,WAAD,CAApD;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAaf,aAAa,EAAhC,CAR4C,CAU5C;;AACA,WAASgB,YAAT,CAAsBC,MAAtB,EAAsC;AACpC,UAAMC,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAe,cAAf,EAA+B,EAA/B,CAAZ;AACA,UAAMC,OAAO,GAAG,gBAAhB;AACA,UAAMC,QAAQ,GAAGH,GAAG,CAACC,OAAJ,CAAYC,OAAZ,EAAqB,EAArB,CAAjB;AACA,WAAOC,QAAP;AACD;;AAED,MAAIC,aAAkB,GAAG,EAAzB;AACA,QAAMC,UAA2C,GAAG,EAApD;AAEA,QAAMC,SAAS,GAAG5B,WAAW,CAAC,YAAY;AACxC,UAAM6B,KAAK,GAAG,MAAMb,cAAc,CAACG,MAAM,CAACX,SAAR,CAAlC;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,EAFwC,CAGxC;AACD,GAJ4B,EAI1B,CAACV,MAAM,CAACX,SAAR,CAJ0B,CAA7B;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACAI,IAAAA,GAAG,CAAC2B,GAAJ,CAAS,mBAAkBb,MAAM,CAACX,SAAU,EAA5C,EAA+CyB,IAA/C,CAAqDC,QAAD,IAAmB;AACrE,UAAIA,QAAQ,CAACjB,IAAb,EAAmB;AACjB,cAAMkB,YAAY,GAAGD,QAAQ,CAACjB,IAAT,CAAcmB,OAAd,CAAsB,CAAtB,EAAyBtB,KAAzB,CAA+BuB,GAA/B,EACnB;AACCC,QAAAA,IAAD,IAAe,IAAIC,OAAJ,CAAkB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1D,gBAAMC,QAAQ,GAAG,MAAMrC,GAAG,CAAC2B,GAAJ,CAAS,GAAEM,IAAK,EAAhB,CAAvB;AACAX,UAAAA,UAAU,CAACgB,IAAX,CAAgB;AACdC,YAAAA,IAAI,EAAEF,QAAQ,CAACzB,IAAT,CAAc4B,KADN;AAEdvB,YAAAA,GAAG,EAAEoB,QAAQ,CAACzB,IAAT,CAAcK;AAFL,WAAhB;AAKAkB,UAAAA,OAAO;AACR,SARc,CAFI,CAArB;AAYAd,QAAAA,aAAa,GAAG,EACd,GAAGQ,QAAQ,CAACjB,IADE;AAEd6B,UAAAA,WAAW,EAAEnB;AAFC,SAAhB;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,aAA1B;AACAa,QAAAA,OAAO,CAACQ,GAAR,CAAYZ,YAAZ;AACD;;AACDa,MAAAA,UAAU,CAAC,MAAM;AACfvC,QAAAA,YAAY,CAACiB,aAAD,CAAZ;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAxBD;AAyBD,GA7BQ,EA6BN,CAACP,MAAM,CAACX,SAAR,CA7BM,CAAT;AA+BAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAE4B,OAAX,CAAmB,CAAnB,EAAsB1B,SAA1B,EAAqC;AAAA;;AACnCL,MAAAA,GAAG,CAAC2B,GAAJ,CAAS,GAAExB,SAAH,aAAGA,SAAH,8CAAGA,SAAS,CAAE4B,OAAX,CAAmB,CAAnB,CAAH,wDAAG,oBAAuB1B,SAAU,EAA5C,EAA+CuB,IAA/C,CAAqDC,QAAD,IAAmB;AACrEvB,QAAAA,YAAY,CAACuB,QAAQ,CAACjB,IAAV,CAAZ;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,OAHD;AAID;;AAED,QAAIvB,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAE4B,OAAX,CAAmB,CAAnB,EAAsBxB,OAA1B,EAAmC;AACjCP,MAAAA,GAAG,CAAC2B,GAAJ,CAAS,GAAExB,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAE4B,OAAX,CAAmB,CAAnB,EAAsBxB,OAAQ,EAAzC,EAA4CqB,IAA5C,CAAkDC,QAAD,IAAmB;AAClErB,QAAAA,UAAU,CAACqB,QAAQ,CAACjB,IAAV,CAAV;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAHD;AAID,KAba,CAed;AAEA;AACA;AACA;AACA;;AACD,GArBQ,EAqBN,CAACvB,SAAD,CArBM,CAAT;;AAuBA,MAAI,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE4B,OAAX,CAAmB,CAAnB,EAAsBa,SAAtB,MAAoC,IAAxC,EAA8C;AAC5ChD,IAAAA,SAAS,CAAC,MAAM;AACdiD,MAAAA,YAAY,CAACC,OAAb,CACE,8BADF,EAEEC,IAAI,CAACC,SAAL,CAAe7C,SAAf,CAFF;AAID,KALQ,EAKN,CAACA,SAAD,CALM,CAAT,CAD4C,CAM3B;AAClB;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBvB,SAAxB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,IAAvB;AACD,GAJQ,EAIN,CAACT,SAAD,EAAYS,IAAZ,CAJM,CAAT;AAMA,sBACE,yCADF;AAKD,CArGD;;AAuGA,eAAeV,MAAf","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-unused-expressions */\nimport React, {\n  useCallback, useEffect, useState, useContext,\n} from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { Header, Info, Title } from './styles';\nimport { AuthContext, AuthProvider } from '../../components/test';\n\ninterface CharacterParams {\n  character: string;\n}\n\ninterface CharacterInfo {\n  results: [\n    {\n      name: string;\n      height: number;\n      mass: number;\n      hair_color: string;\n      skin_color: string;\n      eye_color: string;\n      birth_year: string;\n      gender: string;\n      homeworld: string;\n      films: [\n        {\n          title: string;\n        },\n      ];\n      species: [];\n      vehicles: [];\n      starships: [];\n      favorited: boolean;\n    },\n  ];\n  filmeszeira: {\n    name: string;\n    url: string;\n  }[];\n}\n\ninterface HomeworldInfo {\n  name: string;\n  url: string;\n}\n\ninterface SpeciesInfo {\n  name: string;\n  url: string;\n}\n\ninterface FilmsInfo {\n  title: string;\n}\n\ninterface FavoriteInfo {\n  favoritado: boolean;\n}\n\nconst Lesson: React.FunctionComponent = () => {\n  const [character, setCharacter] = useState<CharacterInfo | null>(null);\n  const [homeworld, setHomeworld] = useState<HomeworldInfo | null>(null);\n  const [species, setSpecies] = useState<SpeciesInfo | null>(null);\n  const [films, setFilms] = useState<FilmsInfo[]>([]);\n\n  const { testandoApenas, data, setData } = useContext(AuthContext);\n\n  const { params } = useRouteMatch<CharacterParams>();\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function getRidOfHttp(string: string) {\n    const url = string.replace(/^https?:\\/\\//, '');\n    const baseUrl = 'swapi.dev/api/';\n    const finalUrl = url.replace(baseUrl, '');\n    return finalUrl;\n  }\n\n  let newCharacters: any = {};\n  const filmsNames: { name: string; url: string }[] = [];\n\n  const fetchData = useCallback(async () => {\n    const dados = await testandoApenas(params.character);\n    console.log('dados', dados);\n    // setData(dados)\n  }, [params.character]);\n\n  useEffect(() => {\n    // fetchData()\n    // console.log('wth', teste)\n    // setCharacter(teste)\n    api.get(`/people/?search=${params.character}`).then((response: any) => {\n      if (response.data) {\n        const fetchHistory = response.data.results[0].films.map(\n          // eslint-disable-next-line no-async-promise-executor\n          (item: any) => new Promise<void>(async (resolve, reject) => {\n            const resposta = await api.get(`${item}`);\n            filmsNames.push({\n              name: resposta.data.title,\n              url: resposta.data.url,\n            });\n\n            resolve();\n          }),\n        );\n        newCharacters = {\n          ...response.data,\n          filmeszeira: filmsNames,\n        };\n        console.log('duha81h4e ', newCharacters);\n        Promise.all(fetchHistory);\n      }\n      setTimeout(() => {\n        setCharacter(newCharacters);\n      }, 2000);\n    });\n  }, [params.character]);\n\n  useEffect(() => {\n    if (character?.results[0].homeworld) {\n      api.get(`${character?.results[0]?.homeworld}`).then((response: any) => {\n        setHomeworld(response.data);\n        console.log('acho que nem ta send');\n      });\n    }\n\n    if (character?.results[0].species) {\n      api.get(`${character?.results[0].species}`).then((response: any) => {\n        setSpecies(response.data);\n        console.log('teste');\n      });\n    }\n\n    // console.log(\"aaaaaaaaaaaa\", character?.results[0].films)\n\n    // api.get(`${character?.results[0].films}`).then((response: any) => {\n    //   setFilms(response.data);\n    //   console.log(\"dados\")\n    // });\n  }, [character]);\n\n  if (character?.results[0].favorited === true) {\n    useEffect(() => {\n      localStorage.setItem(\n        '@githubExplorer:repositories',\n        JSON.stringify(character),\n      );\n    }, [character]); // saves repositores on localstorage when repositories is altered\n  }\n\n  useEffect(() => {\n    // console.log(\"teasd234\", teste)\n    console.log('daibdiad', character);\n    console.log('logando', data);\n  }, [character, data]);\n\n  return (\n    <>\n      \n    </>\n  );\n};\n\nexport default Lesson;\n"]},"metadata":{},"sourceType":"module"}